import pygame, random, math
pygame.init()
 
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
CYAN = (0, 255, 255)
WIDTH = 700
HEIGHT = 500
 
class Bullet(pygame.sprite.Sprite):
 
    hspeed = 0
    vspeed = 0
    undef = 0
     
    def __init__(self, color, startx, starty, gotox, gotoy):
         
        pygame.sprite.Sprite.__init__(self)
 
        self.image = pygame.Surface((10, 10))
        self.image.fill(color)
 
        self.rect = self.image.get_rect()
 
        self.rect.x = startx
        self.rect.y = starty
 
 
        xdistance = gotox - startx
        ydistance = gotoy - starty
        vdistance = math.sqrt(xdistance*xdistance + ydistance*ydistance)
 
        try:
            self.hspeed = 10 * (xdistance/vdistance)
            self.vspeed = 10 * (ydistance/vdistance)
        except:
            self.undef = 1
             
    def update(self):
 
        pygame.sprite.Sprite.update(self)
        self.rect.x += self.hspeed
        self.rect.y += self.vspeed
 
        if self.rect.x < 0 or self.rect.x > WIDTH or self.rect.y < 0 or self.rect.y > HEIGHT:
            self.kill()
            del self
 
class Player(pygame.sprite.Sprite):
 
    hspeed = 0
    vspeed = 0
    nextpos = [0, 0]
    stop = 0
    vdistance = 0
 
    def __init__(self, color):
 
        pygame.sprite.Sprite.__init__(self)
 
        self.image = pygame.Surface((20, 20))
        self.image.fill(color)
 
        self.rect = self.image.get_rect()
 
        self.rect.x = WIDTH/2 - 10
        self.rect.y = HEIGHT/2 - 10
 
    def move(self, gotox, gotoy):
 
        xdistance = gotox - self.rect.x
        ydistance = gotoy - self.rect.y
        self.vdistance = math.sqrt(xdistance*xdistance + ydistance*ydistance)
        self.stop = self.vdistance/4
        try:
            self.hspeed = 4 * (xdistance/self.vdistance)
            self.vspeed = 4 * (ydistance/self.vdistance)
        except:
            hspeed = 0
            vspeed = 0
 
    def update(self):
 
        self.stop -= 1
        if self.stop > 0 and self.nextpos[0] > 0 and self.nextpos[0] < WIDTH - 20 and self.nextpos[1] > 0 and self.nextpos[1] < HEIGHT - 20:
            self.rect.x += self.hspeed
            self.rect.y += self.vspeed
 
        self.nextpos[0] = self.rect.x + self.hspeed
        self.nextpos[1] = self.rect.y + self.vspeed
     
class Enemy(pygame.sprite.Sprite):
 
    health = 0
    hspeed = 0
    vspeed = 0
 
    def __init__(self, color, health):
 
        pygame.sprite.Sprite.__init__(self)
 
        self.image = pygame.Surface((15, 15))
        self.image.fill(color)
 
        self.rect = self.image.get_rect()
 
        startLocation = random.randint(1, 4)
        if startLocation == 1:
            self.rect.y = -20
            self.rect.x = random.randint(0, WIDTH)
        if startLocation == 2:
            self.rect.y = HEIGHT + 5
            self.rect.x = random.randint(0, WIDTH)
        if startLocation == 3:
            self.rect.x = -20
            self.rect.y = random.randint(0, HEIGHT)
        if startLocation == 4:
            self.rect.x = WIDTH + 5
            self.rect.y = random.randint(0, HEIGHT)
 
        self.health = health
 
    def update(self, gotox, gotoy):
 
        xdistance = gotox - self.rect.x
        ydistance = gotoy - self.rect.y
        vdistance = math.sqrt(xdistance*xdistance + ydistance*ydistance)
        try:
            self.hspeed = 3 * (xdistance/vdistance)
            self.vspeed = 3 * (ydistance/vdistance)
        except:
            self.hspeed = 0
            self.vspeed = 0
 
        self.rect.x += self.hspeed
        self.rect.y += self.vspeed
 
class Turret(pygame.sprite.Sprite):
 
    cooldown = 0
 
    def __init__(self, startx, starty):
 
        pygame.sprite.Sprite.__init__(self)
 
        self.image = pygame.Surface((20, 20))
        self.image.fill(CYAN)
 
        self.rect = self.image.get_rect()
 
        self.rect.x = startx
        self.rect.y = starty
 
    def update(self, bulletListPointer, allSpritesList):
 
        self.cooldown -= 1
 
        if self.cooldown < 0:
 
            pos = pygame.mouse.get_pos()
            bullet = Bullet(RED, self.rect.x + 5, self.rect.y +5, pos[0], pos[1])
            bulletListPointer.add(bullet)
            allSpritesList.add(bullet)
            self.cooldown = 45
 
class Controller():
 
    screen = pygame.display.set_mode((WIDTH, HEIGHT))
    score = 0
    money = 0
 
    def __init__(self):
         
        clock = pygame.time.Clock()
        bulletList = pygame.sprite.Group()
        allSpritesList = pygame.sprite.Group()
        basicEnemyList = pygame.sprite.Group()
        turretList = pygame.sprite.Group()
 
        player = Player(BLUE)
        allSpritesList.add(player)
         
        done = 0
        while not done:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    pygame.quit()
                    done = 1
                if event.type == pygame.MOUSEBUTTONDOWN:
                    if event.button == 1:
                        pos = pygame.mouse.get_pos()
                        bullet = Bullet(RED, player.rect.x + 5, player.rect.y + 5, pos[0], pos[1])
                        bulletList.add(bullet)
                        allSpritesList.add(bullet)
                         
                        if bullet.undef == 1:
                            bullet.kill()
                            del bullet
                    if event.button == 2 and not self.money < 50:
                        turret = Turret(player.rect.x, player.rect.y)
                        turretList.add(turret)
                        allSpritesList.add(turret)
                        self.money -= 50
                    if event.button == 3:
                        pos = pygame.mouse.get_pos()
                        player.move(pos[0], pos[1])
 
            if random.randint(1, 75) == 75:
                enemy = Enemy(GREEN, self.score/10)
                basicEnemyList.add(enemy)
                allSpritesList.add(enemy)
 
            bulletKillList = pygame.sprite.groupcollide(basicEnemyList, bulletList, False, True)
            for bullet in bulletKillList:
                bullet.health -= 10
                if bullet.health < 0:
                    bullet.kill()
                    del bullet
                    self.score += 10
                    self.money += 10
             
            playerKill = pygame.sprite.spritecollide(player, basicEnemyList, False)
            gameOver = 0
            for enemy in playerKill:
                print("GAME OVER")
                input("press enter")
                pygame.quit()
 
            self.screen.fill(BLACK)
 
            font = pygame.font.Font(None, 25)
            text = font.render("Score: " + str(self.score), True, WHITE)
            self.screen.blit(text, [15, 15])
            text = font.render("Money: " + str(self.money), True, WHITE)
            self.screen.blit(text, [15, 30])
             
            bulletList.update()
            basicEnemyList.update(player.rect.x, player.rect.y)
            turretList.update(bulletList, allSpritesList)
            player.update()
             
            allSpritesList.draw(self.screen)
            pygame.display.flip()
 
            clock.tick(60)
 
game = Controller()
